;;-*-Lisp-*-
    (in-package goal)

    ;; name: mod-custom-code.gc
    ;; name in dgo: mod-custom-code
    ;; dgos: TODO


    ;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;; What is this file for.
    ;;;;;;;;;;;;;;;;;;;;;;;;;;

    #|This file is to modify jak mods for jak 2. In this instance I (Glitch_master) Is 
    creating mods and refences based on jak 2 but mods based on what I imagined doing back in the day
    back in 2017 ish 2018 ish. The goal is to achieve the barrel mod and other mods that was never possible
    in the original game. Thanks to Kraken for helping me make some of this possible. The goal is to make
    jak 2 weapon mods far more interesting than usual. |#

    
    #| Mods include 
     Blast mod shoots, krimson guard lazers
     Scatter gun shoots, Guard grenades
     Fulcan fury shoots, guard tazer
     peace maker shoots, barrels 
    |#
    
    ;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;   toggle definitions.  ;
    ;;;;;;;;;;;;;;;;;;;;;;;;;;

    (define projectile-test #f)
    
    ;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;; Begin function defintions.
    ;;;;;;;;;;;;;;;;;;;;;;;;;;

    (defun runs-every-frame ()














    (when (and(- projectile-test #t) (rand-vu-percent? 0.99))
      (let ((s5-0 (-> *target* gun))
           (gp-0 (new 'stack-no-clear 'projectile-init-by-other-params))
      )
    (set! (-> gp-0 ent) (-> self entity))
    (set! (-> gp-0 charge) 1.0)
    (set! (-> gp-0 options) (projectile-options account-for-target-velocity deal-damage proj-options-8000))
    (set! (-> gp-0 pos quad) (-> s5-0 fire-point quad))
    (set! (-> gp-0 notify-handle) (the-as handle #f))
    (set! (-> gp-0 owner-handle) (the-as handle #f))
    (set! (-> gp-0 ignore-handle) (process->handle (the-as process (send-event self 'get-vehicle))))
    (let* ((v1-9 *game-info*)
           (a0-9 (+ (-> v1-9 attack-id) 1))
           )
      (set! (-> v1-9 attack-id) a0-9)
      (set! (-> gp-0 attack-id) a0-9)
      )
    (set! (-> gp-0 timeout) (seconds 4))
    (vector-float*! (-> gp-0 vel) (-> s5-0 fire-dir-out) 819200.0)
    (spawn-projectile gun-yellow-shot gp-0 (ppointer->process (-> s5-0 gun)) *default-dead-pool*)
    )
    )

    )